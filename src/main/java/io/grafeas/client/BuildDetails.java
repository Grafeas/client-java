/**
 * Grafeas API
 * An API to insert and retrieve annotations on cloud artifacts.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.grafeas.client;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.grafeas.client.BuildProvenance;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Message encapsulating build provenance details
 */
@ApiModel(description = "Message encapsulating build provenance details")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-08T14:44:14.136-04:00")
public class BuildDetails   {
  @SerializedName("provenance")
  private BuildProvenance provenance = null;

  @SerializedName("provenanceBytes")
  private String provenanceBytes = null;

  public BuildDetails provenance(BuildProvenance provenance) {
    this.provenance = provenance;
    return this;
  }

   /**
   * The actual provenance
   * @return provenance
  **/
  @ApiModelProperty(example = "null", value = "The actual provenance")
  public BuildProvenance getProvenance() {
    return provenance;
  }

  public void setProvenance(BuildProvenance provenance) {
    this.provenance = provenance;
  }

  public BuildDetails provenanceBytes(String provenanceBytes) {
    this.provenanceBytes = provenanceBytes;
    return this;
  }

   /**
   * Serialized json representation of the provenance, used in generating the BuildSignature in the corresponding Result. After verifying the signature, provenance_bytes can be unmarshalled and compared to the provenance to confirm that it is unchanged. A base64-encoded string representation of the provenance bytes is used for the signature in order to interoperate with openssl which expects this format for signature verification.  The serialized form is captured both to avoid ambiguity in how the provenance is marshalled to json as well to prevent incompatibilities with future changes.
   * @return provenanceBytes
  **/
  @ApiModelProperty(example = "null", value = "Serialized json representation of the provenance, used in generating the BuildSignature in the corresponding Result. After verifying the signature, provenance_bytes can be unmarshalled and compared to the provenance to confirm that it is unchanged. A base64-encoded string representation of the provenance bytes is used for the signature in order to interoperate with openssl which expects this format for signature verification.  The serialized form is captured both to avoid ambiguity in how the provenance is marshalled to json as well to prevent incompatibilities with future changes.")
  public String getProvenanceBytes() {
    return provenanceBytes;
  }

  public void setProvenanceBytes(String provenanceBytes) {
    this.provenanceBytes = provenanceBytes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildDetails buildDetails = (BuildDetails) o;
    return Objects.equals(this.provenance, buildDetails.provenance) &&
        Objects.equals(this.provenanceBytes, buildDetails.provenanceBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(provenance, provenanceBytes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildDetails {\n");
    
    sb.append("    provenance: ").append(toIndentedString(provenance)).append("\n");
    sb.append("    provenanceBytes: ").append(toIndentedString(provenanceBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

