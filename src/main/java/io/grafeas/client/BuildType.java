/**
 * Grafeas API
 * An API to insert and retrieve annotations on cloud artifacts.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.grafeas.client;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.grafeas.client.BuildSignature;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Note holding the version of the provider&#39;s builder and the signature of the provenance message in linked BuildDetails.
 */
@ApiModel(description = "Note holding the version of the provider's builder and the signature of the provenance message in linked BuildDetails.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-08T14:44:14.136-04:00")
public class BuildType   {
  @SerializedName("builderVersion")
  private String builderVersion = null;

  @SerializedName("signature")
  private BuildSignature signature = null;

  public BuildType builderVersion(String builderVersion) {
    this.builderVersion = builderVersion;
    return this;
  }

   /**
   * Version of the builder which produced this Note.
   * @return builderVersion
  **/
  @ApiModelProperty(example = "null", value = "Version of the builder which produced this Note.")
  public String getBuilderVersion() {
    return builderVersion;
  }

  public void setBuilderVersion(String builderVersion) {
    this.builderVersion = builderVersion;
  }

  public BuildType signature(BuildSignature signature) {
    this.signature = signature;
    return this;
  }

   /**
   * Signature of the build in Occurrences pointing to the Note containing this BuilderDetails.
   * @return signature
  **/
  @ApiModelProperty(example = "null", value = "Signature of the build in Occurrences pointing to the Note containing this BuilderDetails.")
  public BuildSignature getSignature() {
    return signature;
  }

  public void setSignature(BuildSignature signature) {
    this.signature = signature;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildType buildType = (BuildType) o;
    return Objects.equals(this.builderVersion, buildType.builderVersion) &&
        Objects.equals(this.signature, buildType.signature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(builderVersion, signature);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildType {\n");
    
    sb.append("    builderVersion: ").append(toIndentedString(builderVersion)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

