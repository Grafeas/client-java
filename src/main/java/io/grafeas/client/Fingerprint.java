/**
 * Grafeas API
 * An API to insert and retrieve annotations on cloud artifacts.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.grafeas.client;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * A set of properties that uniquely identify a given Docker image.
 */
@ApiModel(description = "A set of properties that uniquely identify a given Docker image.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-08T14:44:14.136-04:00")
public class Fingerprint   {
  @SerializedName("v1Name")
  private String v1Name = null;

  @SerializedName("v2Blob")
  private List<String> v2Blob = new ArrayList<String>();

  @SerializedName("v2Name")
  private String v2Name = null;

  public Fingerprint v1Name(String v1Name) {
    this.v1Name = v1Name;
    return this;
  }

   /**
   * The layer-id of the final layer in the Docker image’s v1 representation. This field can be used as a filter in list requests.
   * @return v1Name
  **/
  @ApiModelProperty(example = "null", value = "The layer-id of the final layer in the Docker image’s v1 representation. This field can be used as a filter in list requests.")
  public String getV1Name() {
    return v1Name;
  }

  public void setV1Name(String v1Name) {
    this.v1Name = v1Name;
  }

  public Fingerprint v2Blob(List<String> v2Blob) {
    this.v2Blob = v2Blob;
    return this;
  }

  public Fingerprint addV2BlobItem(String v2BlobItem) {
    this.v2Blob.add(v2BlobItem);
    return this;
  }

   /**
   * The ordered list of v2 blobs that represent a given image.
   * @return v2Blob
  **/
  @ApiModelProperty(example = "null", value = "The ordered list of v2 blobs that represent a given image.")
  public List<String> getV2Blob() {
    return v2Blob;
  }

  public void setV2Blob(List<String> v2Blob) {
    this.v2Blob = v2Blob;
  }

  public Fingerprint v2Name(String v2Name) {
    this.v2Name = v2Name;
    return this;
  }

   /**
   * The name of the image’s v2 blobs computed via:   [bottom] := v2_blobbottom := sha256(v2_blob[N] + “ ” + v2_name[N+1]) Only the name of the final blob is kept. This field can be used as a filter in list requests. @OutputOnly
   * @return v2Name
  **/
  @ApiModelProperty(example = "null", value = "The name of the image’s v2 blobs computed via:   [bottom] := v2_blobbottom := sha256(v2_blob[N] + “ ” + v2_name[N+1]) Only the name of the final blob is kept. This field can be used as a filter in list requests. @OutputOnly")
  public String getV2Name() {
    return v2Name;
  }

  public void setV2Name(String v2Name) {
    this.v2Name = v2Name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Fingerprint fingerprint = (Fingerprint) o;
    return Objects.equals(this.v1Name, fingerprint.v1Name) &&
        Objects.equals(this.v2Blob, fingerprint.v2Blob) &&
        Objects.equals(this.v2Name, fingerprint.v2Name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(v1Name, v2Blob, v2Name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fingerprint {\n");
    
    sb.append("    v1Name: ").append(toIndentedString(v1Name)).append("\n");
    sb.append("    v2Blob: ").append(toIndentedString(v2Blob)).append("\n");
    sb.append("    v2Name: ").append(toIndentedString(v2Name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

