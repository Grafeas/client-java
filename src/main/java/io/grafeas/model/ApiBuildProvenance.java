/*
 * Grafeas API
 * An API to insert and retrieve annotations on cloud artifacts.
 *
 * OpenAPI spec version: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.grafeas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.grafeas.model.ApiArtifact;
import io.grafeas.model.ApiCommand;
import io.grafeas.model.ApiSource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * Provenance of a build. Contains all information needed to verify the full details about the build from source to completion.
 */
@ApiModel(description = "Provenance of a build. Contains all information needed to verify the full details about the build from source to completion.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-04T13:20:14.121-07:00")
public class ApiBuildProvenance {
  @SerializedName("id")
  private String id = null;

  @SerializedName("project_id")
  private String projectId = null;

  @SerializedName("commands")
  private List<ApiCommand> commands = null;

  @SerializedName("built_artifacts")
  private List<ApiArtifact> builtArtifacts = null;

  @SerializedName("create_time")
  private OffsetDateTime createTime = null;

  @SerializedName("start_time")
  private OffsetDateTime startTime = null;

  @SerializedName("finish_time")
  private OffsetDateTime finishTime = null;

  @SerializedName("creator")
  private String creator = null;

  @SerializedName("logs_bucket")
  private String logsBucket = null;

  @SerializedName("source_provenance")
  private ApiSource sourceProvenance = null;

  @SerializedName("trigger_id")
  private String triggerId = null;

  @SerializedName("build_options")
  private Map<String, String> buildOptions = null;

  @SerializedName("builder_version")
  private String builderVersion = null;

  public ApiBuildProvenance id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the build.
   * @return id
  **/
  @ApiModelProperty(value = "Unique identifier of the build.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ApiBuildProvenance projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * ID of the project.
   * @return projectId
  **/
  @ApiModelProperty(value = "ID of the project.")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public ApiBuildProvenance commands(List<ApiCommand> commands) {
    this.commands = commands;
    return this;
  }

  public ApiBuildProvenance addCommandsItem(ApiCommand commandsItem) {
    if (this.commands == null) {
      this.commands = new ArrayList<ApiCommand>();
    }
    this.commands.add(commandsItem);
    return this;
  }

   /**
   * Commands requested by the build.
   * @return commands
  **/
  @ApiModelProperty(value = "Commands requested by the build.")
  public List<ApiCommand> getCommands() {
    return commands;
  }

  public void setCommands(List<ApiCommand> commands) {
    this.commands = commands;
  }

  public ApiBuildProvenance builtArtifacts(List<ApiArtifact> builtArtifacts) {
    this.builtArtifacts = builtArtifacts;
    return this;
  }

  public ApiBuildProvenance addBuiltArtifactsItem(ApiArtifact builtArtifactsItem) {
    if (this.builtArtifacts == null) {
      this.builtArtifacts = new ArrayList<ApiArtifact>();
    }
    this.builtArtifacts.add(builtArtifactsItem);
    return this;
  }

   /**
   * Output of the build.
   * @return builtArtifacts
  **/
  @ApiModelProperty(value = "Output of the build.")
  public List<ApiArtifact> getBuiltArtifacts() {
    return builtArtifacts;
  }

  public void setBuiltArtifacts(List<ApiArtifact> builtArtifacts) {
    this.builtArtifacts = builtArtifacts;
  }

  public ApiBuildProvenance createTime(OffsetDateTime createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Time at which the build was created.
   * @return createTime
  **/
  @ApiModelProperty(value = "Time at which the build was created.")
  public OffsetDateTime getCreateTime() {
    return createTime;
  }

  public void setCreateTime(OffsetDateTime createTime) {
    this.createTime = createTime;
  }

  public ApiBuildProvenance startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Time at which execution of the build was started.
   * @return startTime
  **/
  @ApiModelProperty(value = "Time at which execution of the build was started.")
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }

  public ApiBuildProvenance finishTime(OffsetDateTime finishTime) {
    this.finishTime = finishTime;
    return this;
  }

   /**
   * Time at which execution of the build was finished.
   * @return finishTime
  **/
  @ApiModelProperty(value = "Time at which execution of the build was finished.")
  public OffsetDateTime getFinishTime() {
    return finishTime;
  }

  public void setFinishTime(OffsetDateTime finishTime) {
    this.finishTime = finishTime;
  }

  public ApiBuildProvenance creator(String creator) {
    this.creator = creator;
    return this;
  }

   /**
   * E-mail address of the user who initiated this build. Note that this was the user&#39;s e-mail address at the time the build was initiated; this address may not represent the same end-user for all time.
   * @return creator
  **/
  @ApiModelProperty(value = "E-mail address of the user who initiated this build. Note that this was the user's e-mail address at the time the build was initiated; this address may not represent the same end-user for all time.")
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }

  public ApiBuildProvenance logsBucket(String logsBucket) {
    this.logsBucket = logsBucket;
    return this;
  }

   /**
   * Google Cloud Storage bucket where logs were written.
   * @return logsBucket
  **/
  @ApiModelProperty(value = "Google Cloud Storage bucket where logs were written.")
  public String getLogsBucket() {
    return logsBucket;
  }

  public void setLogsBucket(String logsBucket) {
    this.logsBucket = logsBucket;
  }

  public ApiBuildProvenance sourceProvenance(ApiSource sourceProvenance) {
    this.sourceProvenance = sourceProvenance;
    return this;
  }

   /**
   * Details of the Source input to the build.
   * @return sourceProvenance
  **/
  @ApiModelProperty(value = "Details of the Source input to the build.")
  public ApiSource getSourceProvenance() {
    return sourceProvenance;
  }

  public void setSourceProvenance(ApiSource sourceProvenance) {
    this.sourceProvenance = sourceProvenance;
  }

  public ApiBuildProvenance triggerId(String triggerId) {
    this.triggerId = triggerId;
    return this;
  }

   /**
   * Trigger identifier if the build was triggered automatically; empty if not.
   * @return triggerId
  **/
  @ApiModelProperty(value = "Trigger identifier if the build was triggered automatically; empty if not.")
  public String getTriggerId() {
    return triggerId;
  }

  public void setTriggerId(String triggerId) {
    this.triggerId = triggerId;
  }

  public ApiBuildProvenance buildOptions(Map<String, String> buildOptions) {
    this.buildOptions = buildOptions;
    return this;
  }

  public ApiBuildProvenance putBuildOptionsItem(String key, String buildOptionsItem) {
    if (this.buildOptions == null) {
      this.buildOptions = new HashMap<String, String>();
    }
    this.buildOptions.put(key, buildOptionsItem);
    return this;
  }

   /**
   * Special options applied to this build. This is a catch-all field where build providers can enter any desired additional details.
   * @return buildOptions
  **/
  @ApiModelProperty(value = "Special options applied to this build. This is a catch-all field where build providers can enter any desired additional details.")
  public Map<String, String> getBuildOptions() {
    return buildOptions;
  }

  public void setBuildOptions(Map<String, String> buildOptions) {
    this.buildOptions = buildOptions;
  }

  public ApiBuildProvenance builderVersion(String builderVersion) {
    this.builderVersion = builderVersion;
    return this;
  }

   /**
   * Version string of the builder at the time this build was executed.
   * @return builderVersion
  **/
  @ApiModelProperty(value = "Version string of the builder at the time this build was executed.")
  public String getBuilderVersion() {
    return builderVersion;
  }

  public void setBuilderVersion(String builderVersion) {
    this.builderVersion = builderVersion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiBuildProvenance apiBuildProvenance = (ApiBuildProvenance) o;
    return Objects.equals(this.id, apiBuildProvenance.id) &&
        Objects.equals(this.projectId, apiBuildProvenance.projectId) &&
        Objects.equals(this.commands, apiBuildProvenance.commands) &&
        Objects.equals(this.builtArtifacts, apiBuildProvenance.builtArtifacts) &&
        Objects.equals(this.createTime, apiBuildProvenance.createTime) &&
        Objects.equals(this.startTime, apiBuildProvenance.startTime) &&
        Objects.equals(this.finishTime, apiBuildProvenance.finishTime) &&
        Objects.equals(this.creator, apiBuildProvenance.creator) &&
        Objects.equals(this.logsBucket, apiBuildProvenance.logsBucket) &&
        Objects.equals(this.sourceProvenance, apiBuildProvenance.sourceProvenance) &&
        Objects.equals(this.triggerId, apiBuildProvenance.triggerId) &&
        Objects.equals(this.buildOptions, apiBuildProvenance.buildOptions) &&
        Objects.equals(this.builderVersion, apiBuildProvenance.builderVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, projectId, commands, builtArtifacts, createTime, startTime, finishTime, creator, logsBucket, sourceProvenance, triggerId, buildOptions, builderVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiBuildProvenance {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    commands: ").append(toIndentedString(commands)).append("\n");
    sb.append("    builtArtifacts: ").append(toIndentedString(builtArtifacts)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    finishTime: ").append(toIndentedString(finishTime)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    logsBucket: ").append(toIndentedString(logsBucket)).append("\n");
    sb.append("    sourceProvenance: ").append(toIndentedString(sourceProvenance)).append("\n");
    sb.append("    triggerId: ").append(toIndentedString(triggerId)).append("\n");
    sb.append("    buildOptions: ").append(toIndentedString(buildOptions)).append("\n");
    sb.append("    builderVersion: ").append(toIndentedString(builderVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

