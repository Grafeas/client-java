/*
 * grafeas.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AttestationGenericSignedAttestation;
import io.swagger.client.model.AttestationPgpSignedAttestation;
import java.io.IOException;

/**
 * Occurrence that represents a single \&quot;attestation\&quot;. The authenticity of an attestation can be verified using the attached signature. If the verifier trusts the public key of the signer, then verifying the signature is sufficient to establish trust. In this circumstance, the authority to which this attestation is attached is primarily useful for look-up (how to find this attestation if you already know the authority and artifact to be verified) and intent (which authority was this attestation intended to sign for).
 */
@ApiModel(description = "Occurrence that represents a single \"attestation\". The authenticity of an attestation can be verified using the attached signature. If the verifier trusts the public key of the signer, then verifying the signature is sufficient to establish trust. In this circumstance, the authority to which this attestation is attached is primarily useful for look-up (how to find this attestation if you already know the authority and artifact to be verified) and intent (which authority was this attestation intended to sign for).")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-08-22T18:45:44.983-04:00")
public class AttestationAttestation {
  @SerializedName("pgp_signed_attestation")
  private AttestationPgpSignedAttestation pgpSignedAttestation = null;

  @SerializedName("generic_signed_attestation")
  private AttestationGenericSignedAttestation genericSignedAttestation = null;

  public AttestationAttestation pgpSignedAttestation(AttestationPgpSignedAttestation pgpSignedAttestation) {
    this.pgpSignedAttestation = pgpSignedAttestation;
    return this;
  }

   /**
   * A PGP signed attestation.
   * @return pgpSignedAttestation
  **/
  @ApiModelProperty(value = "A PGP signed attestation.")
  public AttestationPgpSignedAttestation getPgpSignedAttestation() {
    return pgpSignedAttestation;
  }

  public void setPgpSignedAttestation(AttestationPgpSignedAttestation pgpSignedAttestation) {
    this.pgpSignedAttestation = pgpSignedAttestation;
  }

  public AttestationAttestation genericSignedAttestation(AttestationGenericSignedAttestation genericSignedAttestation) {
    this.genericSignedAttestation = genericSignedAttestation;
    return this;
  }

   /**
   * An attestation that supports multiple &#x60;Signature&#x60;s over the same attestation payload. The signatures (defined in common.proto) support a superset of public key types and IDs compared to PgpSignedAttestation.
   * @return genericSignedAttestation
  **/
  @ApiModelProperty(value = "An attestation that supports multiple `Signature`s over the same attestation payload. The signatures (defined in common.proto) support a superset of public key types and IDs compared to PgpSignedAttestation.")
  public AttestationGenericSignedAttestation getGenericSignedAttestation() {
    return genericSignedAttestation;
  }

  public void setGenericSignedAttestation(AttestationGenericSignedAttestation genericSignedAttestation) {
    this.genericSignedAttestation = genericSignedAttestation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttestationAttestation attestationAttestation = (AttestationAttestation) o;
    return Objects.equals(this.pgpSignedAttestation, attestationAttestation.pgpSignedAttestation) &&
        Objects.equals(this.genericSignedAttestation, attestationAttestation.genericSignedAttestation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pgpSignedAttestation, genericSignedAttestation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttestationAttestation {\n");
    
    sb.append("    pgpSignedAttestation: ").append(toIndentedString(pgpSignedAttestation)).append("\n");
    sb.append("    genericSignedAttestation: ").append(toIndentedString(genericSignedAttestation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

