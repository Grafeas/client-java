/*
 * Grafeas API
 * An API to insert and retrieve annotations on cloud artifacts.
 *
 * OpenAPI spec version: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.grafeas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.grafeas.model.ApiBuildDetails;
import io.grafeas.model.ApiNoteKind;
import io.grafeas.model.AttestationAuthorityAttestationDetails;
import io.grafeas.model.DeployableDeploymentDetails;
import io.grafeas.model.DiscoveryDiscoveredDetails;
import io.grafeas.model.DockerImageDerivedDetails;
import io.grafeas.model.PackageManagerInstallationDetails;
import io.grafeas.model.VulnerabilityTypeVulnerabilityDetails;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * &#x60;Occurrence&#x60; includes information about analysis occurrences for an image.
 */
@ApiModel(description = "`Occurrence` includes information about analysis occurrences for an image.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-04T13:20:14.121-07:00")
public class ApiOccurrence {
  @SerializedName("name")
  private String name = null;

  @SerializedName("resource_url")
  private String resourceUrl = null;

  @SerializedName("note_name")
  private String noteName = null;

  @SerializedName("kind")
  private ApiNoteKind kind = null;

  @SerializedName("vulnerability_details")
  private VulnerabilityTypeVulnerabilityDetails vulnerabilityDetails = null;

  @SerializedName("build_details")
  private ApiBuildDetails buildDetails = null;

  @SerializedName("derived_image_details")
  private DockerImageDerivedDetails derivedImageDetails = null;

  @SerializedName("installation_details")
  private PackageManagerInstallationDetails installationDetails = null;

  @SerializedName("deployment_details")
  private DeployableDeploymentDetails deploymentDetails = null;

  @SerializedName("discovered_details")
  private DiscoveryDiscoveredDetails discoveredDetails = null;

  @SerializedName("attestation_details")
  private AttestationAuthorityAttestationDetails attestationDetails = null;

  @SerializedName("remediation")
  private String remediation = null;

  @SerializedName("create_time")
  private OffsetDateTime createTime = null;

  @SerializedName("update_time")
  private OffsetDateTime updateTime = null;

  public ApiOccurrence name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ApiOccurrence resourceUrl(String resourceUrl) {
    this.resourceUrl = resourceUrl;
    return this;
  }

   /**
   * The unique URL of the image or the container for which the &#x60;Occurrence&#x60; applies. For example, https://gcr.io/project/image@sha256:foo This field can be used as a filter in list requests.
   * @return resourceUrl
  **/
  @ApiModelProperty(value = "The unique URL of the image or the container for which the `Occurrence` applies. For example, https://gcr.io/project/image@sha256:foo This field can be used as a filter in list requests.")
  public String getResourceUrl() {
    return resourceUrl;
  }

  public void setResourceUrl(String resourceUrl) {
    this.resourceUrl = resourceUrl;
  }

  public ApiOccurrence noteName(String noteName) {
    this.noteName = noteName;
    return this;
  }

   /**
   * An analysis note associated with this image, in the form \&quot;providers/{provider_id}/notes/{NOTE_ID}\&quot; This field can be used as a filter in list requests.
   * @return noteName
  **/
  @ApiModelProperty(value = "An analysis note associated with this image, in the form \"providers/{provider_id}/notes/{NOTE_ID}\" This field can be used as a filter in list requests.")
  public String getNoteName() {
    return noteName;
  }

  public void setNoteName(String noteName) {
    this.noteName = noteName;
  }

  public ApiOccurrence kind(ApiNoteKind kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Output only. This explicitly denotes which of the &#x60;Occurrence&#x60; details are specified. This field can be used as a filter in list requests.
   * @return kind
  **/
  @ApiModelProperty(value = "Output only. This explicitly denotes which of the `Occurrence` details are specified. This field can be used as a filter in list requests.")
  public ApiNoteKind getKind() {
    return kind;
  }

  public void setKind(ApiNoteKind kind) {
    this.kind = kind;
  }

  public ApiOccurrence vulnerabilityDetails(VulnerabilityTypeVulnerabilityDetails vulnerabilityDetails) {
    this.vulnerabilityDetails = vulnerabilityDetails;
    return this;
  }

   /**
   * Details of a security vulnerability note.
   * @return vulnerabilityDetails
  **/
  @ApiModelProperty(value = "Details of a security vulnerability note.")
  public VulnerabilityTypeVulnerabilityDetails getVulnerabilityDetails() {
    return vulnerabilityDetails;
  }

  public void setVulnerabilityDetails(VulnerabilityTypeVulnerabilityDetails vulnerabilityDetails) {
    this.vulnerabilityDetails = vulnerabilityDetails;
  }

  public ApiOccurrence buildDetails(ApiBuildDetails buildDetails) {
    this.buildDetails = buildDetails;
    return this;
  }

   /**
   * Build details for a verifiable build.
   * @return buildDetails
  **/
  @ApiModelProperty(value = "Build details for a verifiable build.")
  public ApiBuildDetails getBuildDetails() {
    return buildDetails;
  }

  public void setBuildDetails(ApiBuildDetails buildDetails) {
    this.buildDetails = buildDetails;
  }

  public ApiOccurrence derivedImageDetails(DockerImageDerivedDetails derivedImageDetails) {
    this.derivedImageDetails = derivedImageDetails;
    return this;
  }

   /**
   * Describes how this resource derives from the basis in the associated note.
   * @return derivedImageDetails
  **/
  @ApiModelProperty(value = "Describes how this resource derives from the basis in the associated note.")
  public DockerImageDerivedDetails getDerivedImageDetails() {
    return derivedImageDetails;
  }

  public void setDerivedImageDetails(DockerImageDerivedDetails derivedImageDetails) {
    this.derivedImageDetails = derivedImageDetails;
  }

  public ApiOccurrence installationDetails(PackageManagerInstallationDetails installationDetails) {
    this.installationDetails = installationDetails;
    return this;
  }

   /**
   * Describes the installation of a package on the linked resource.
   * @return installationDetails
  **/
  @ApiModelProperty(value = "Describes the installation of a package on the linked resource.")
  public PackageManagerInstallationDetails getInstallationDetails() {
    return installationDetails;
  }

  public void setInstallationDetails(PackageManagerInstallationDetails installationDetails) {
    this.installationDetails = installationDetails;
  }

  public ApiOccurrence deploymentDetails(DeployableDeploymentDetails deploymentDetails) {
    this.deploymentDetails = deploymentDetails;
    return this;
  }

   /**
   * Describes the deployment of an artifact on a runtime.
   * @return deploymentDetails
  **/
  @ApiModelProperty(value = "Describes the deployment of an artifact on a runtime.")
  public DeployableDeploymentDetails getDeploymentDetails() {
    return deploymentDetails;
  }

  public void setDeploymentDetails(DeployableDeploymentDetails deploymentDetails) {
    this.deploymentDetails = deploymentDetails;
  }

  public ApiOccurrence discoveredDetails(DiscoveryDiscoveredDetails discoveredDetails) {
    this.discoveredDetails = discoveredDetails;
    return this;
  }

   /**
   * Describes the initial scan status for this resource.
   * @return discoveredDetails
  **/
  @ApiModelProperty(value = "Describes the initial scan status for this resource.")
  public DiscoveryDiscoveredDetails getDiscoveredDetails() {
    return discoveredDetails;
  }

  public void setDiscoveredDetails(DiscoveryDiscoveredDetails discoveredDetails) {
    this.discoveredDetails = discoveredDetails;
  }

  public ApiOccurrence attestationDetails(AttestationAuthorityAttestationDetails attestationDetails) {
    this.attestationDetails = attestationDetails;
    return this;
  }

   /**
   * Describes an attestation of an artifact.
   * @return attestationDetails
  **/
  @ApiModelProperty(value = "Describes an attestation of an artifact.")
  public AttestationAuthorityAttestationDetails getAttestationDetails() {
    return attestationDetails;
  }

  public void setAttestationDetails(AttestationAuthorityAttestationDetails attestationDetails) {
    this.attestationDetails = attestationDetails;
  }

  public ApiOccurrence remediation(String remediation) {
    this.remediation = remediation;
    return this;
  }

   /**
   * Get remediation
   * @return remediation
  **/
  @ApiModelProperty(value = "")
  public String getRemediation() {
    return remediation;
  }

  public void setRemediation(String remediation) {
    this.remediation = remediation;
  }

  public ApiOccurrence createTime(OffsetDateTime createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Output only. The time this &#x60;Occurrence&#x60; was created.
   * @return createTime
  **/
  @ApiModelProperty(value = "Output only. The time this `Occurrence` was created.")
  public OffsetDateTime getCreateTime() {
    return createTime;
  }

  public void setCreateTime(OffsetDateTime createTime) {
    this.createTime = createTime;
  }

  public ApiOccurrence updateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Output only. The time this &#x60;Occurrence&#x60; was last updated.
   * @return updateTime
  **/
  @ApiModelProperty(value = "Output only. The time this `Occurrence` was last updated.")
  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiOccurrence apiOccurrence = (ApiOccurrence) o;
    return Objects.equals(this.name, apiOccurrence.name) &&
        Objects.equals(this.resourceUrl, apiOccurrence.resourceUrl) &&
        Objects.equals(this.noteName, apiOccurrence.noteName) &&
        Objects.equals(this.kind, apiOccurrence.kind) &&
        Objects.equals(this.vulnerabilityDetails, apiOccurrence.vulnerabilityDetails) &&
        Objects.equals(this.buildDetails, apiOccurrence.buildDetails) &&
        Objects.equals(this.derivedImageDetails, apiOccurrence.derivedImageDetails) &&
        Objects.equals(this.installationDetails, apiOccurrence.installationDetails) &&
        Objects.equals(this.deploymentDetails, apiOccurrence.deploymentDetails) &&
        Objects.equals(this.discoveredDetails, apiOccurrence.discoveredDetails) &&
        Objects.equals(this.attestationDetails, apiOccurrence.attestationDetails) &&
        Objects.equals(this.remediation, apiOccurrence.remediation) &&
        Objects.equals(this.createTime, apiOccurrence.createTime) &&
        Objects.equals(this.updateTime, apiOccurrence.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, resourceUrl, noteName, kind, vulnerabilityDetails, buildDetails, derivedImageDetails, installationDetails, deploymentDetails, discoveredDetails, attestationDetails, remediation, createTime, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiOccurrence {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    resourceUrl: ").append(toIndentedString(resourceUrl)).append("\n");
    sb.append("    noteName: ").append(toIndentedString(noteName)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    vulnerabilityDetails: ").append(toIndentedString(vulnerabilityDetails)).append("\n");
    sb.append("    buildDetails: ").append(toIndentedString(buildDetails)).append("\n");
    sb.append("    derivedImageDetails: ").append(toIndentedString(derivedImageDetails)).append("\n");
    sb.append("    installationDetails: ").append(toIndentedString(installationDetails)).append("\n");
    sb.append("    deploymentDetails: ").append(toIndentedString(deploymentDetails)).append("\n");
    sb.append("    discoveredDetails: ").append(toIndentedString(discoveredDetails)).append("\n");
    sb.append("    attestationDetails: ").append(toIndentedString(attestationDetails)).append("\n");
    sb.append("    remediation: ").append(toIndentedString(remediation)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

