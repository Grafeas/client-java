/**
 * Grafeas API
 * An API to insert and retrieve annotations on cloud artifacts.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.grafeas.client;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.grafeas.client.CloudRepoSourceContext;
import io.grafeas.client.CloudWorkspaceSourceContext;
import io.grafeas.client.GerritSourceContext;
import io.grafeas.client.GitSourceContext;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * A SourceContext is a reference to a tree of files. A SourceContext together with a path point to a unique revision of a single file or directory.
 */
@ApiModel(description = "A SourceContext is a reference to a tree of files. A SourceContext together with a path point to a unique revision of a single file or directory.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-08T14:44:14.136-04:00")
public class SourceContext   {
  @SerializedName("cloudRepo")
  private CloudRepoSourceContext cloudRepo = null;

  @SerializedName("cloudWorkspace")
  private CloudWorkspaceSourceContext cloudWorkspace = null;

  @SerializedName("gerrit")
  private GerritSourceContext gerrit = null;

  @SerializedName("git")
  private GitSourceContext git = null;

  public SourceContext cloudRepo(CloudRepoSourceContext cloudRepo) {
    this.cloudRepo = cloudRepo;
    return this;
  }

   /**
   * A SourceContext referring to a revision in a cloud repo.
   * @return cloudRepo
  **/
  @ApiModelProperty(example = "null", value = "A SourceContext referring to a revision in a cloud repo.")
  public CloudRepoSourceContext getCloudRepo() {
    return cloudRepo;
  }

  public void setCloudRepo(CloudRepoSourceContext cloudRepo) {
    this.cloudRepo = cloudRepo;
  }

  public SourceContext cloudWorkspace(CloudWorkspaceSourceContext cloudWorkspace) {
    this.cloudWorkspace = cloudWorkspace;
    return this;
  }

   /**
   * A SourceContext referring to a snapshot in a cloud workspace.
   * @return cloudWorkspace
  **/
  @ApiModelProperty(example = "null", value = "A SourceContext referring to a snapshot in a cloud workspace.")
  public CloudWorkspaceSourceContext getCloudWorkspace() {
    return cloudWorkspace;
  }

  public void setCloudWorkspace(CloudWorkspaceSourceContext cloudWorkspace) {
    this.cloudWorkspace = cloudWorkspace;
  }

  public SourceContext gerrit(GerritSourceContext gerrit) {
    this.gerrit = gerrit;
    return this;
  }

   /**
   * A SourceContext referring to a Gerrit project.
   * @return gerrit
  **/
  @ApiModelProperty(example = "null", value = "A SourceContext referring to a Gerrit project.")
  public GerritSourceContext getGerrit() {
    return gerrit;
  }

  public void setGerrit(GerritSourceContext gerrit) {
    this.gerrit = gerrit;
  }

  public SourceContext git(GitSourceContext git) {
    this.git = git;
    return this;
  }

   /**
   * A SourceContext referring to any third party Git repo (e.g. GitHub).
   * @return git
  **/
  @ApiModelProperty(example = "null", value = "A SourceContext referring to any third party Git repo (e.g. GitHub).")
  public GitSourceContext getGit() {
    return git;
  }

  public void setGit(GitSourceContext git) {
    this.git = git;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceContext sourceContext = (SourceContext) o;
    return Objects.equals(this.cloudRepo, sourceContext.cloudRepo) &&
        Objects.equals(this.cloudWorkspace, sourceContext.cloudWorkspace) &&
        Objects.equals(this.gerrit, sourceContext.gerrit) &&
        Objects.equals(this.git, sourceContext.git);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudRepo, cloudWorkspace, gerrit, git);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceContext {\n");
    
    sb.append("    cloudRepo: ").append(toIndentedString(cloudRepo)).append("\n");
    sb.append("    cloudWorkspace: ").append(toIndentedString(cloudWorkspace)).append("\n");
    sb.append("    gerrit: ").append(toIndentedString(gerrit)).append("\n");
    sb.append("    git: ").append(toIndentedString(git)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

