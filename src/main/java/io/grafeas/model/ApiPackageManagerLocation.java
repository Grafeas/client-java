/*
 * Grafeas API
 * An API to insert and retrieve annotations on cloud artifacts.
 *
 * OpenAPI spec version: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.grafeas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.grafeas.model.VulnerabilityTypeVersion;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ApiPackageManagerLocation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-04T13:20:14.121-07:00")
public class ApiPackageManagerLocation {
  @SerializedName("cpe_uri")
  private String cpeUri = null;

  @SerializedName("version")
  private VulnerabilityTypeVersion version = null;

  @SerializedName("path")
  private String path = null;

  public ApiPackageManagerLocation cpeUri(String cpeUri) {
    this.cpeUri = cpeUri;
    return this;
  }

   /**
   * The cpe_uri in [cpe format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package.
   * @return cpeUri
  **/
  @ApiModelProperty(value = "The cpe_uri in [cpe format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package.")
  public String getCpeUri() {
    return cpeUri;
  }

  public void setCpeUri(String cpeUri) {
    this.cpeUri = cpeUri;
  }

  public ApiPackageManagerLocation version(VulnerabilityTypeVersion version) {
    this.version = version;
    return this;
  }

   /**
   * The version installed at this location.
   * @return version
  **/
  @ApiModelProperty(value = "The version installed at this location.")
  public VulnerabilityTypeVersion getVersion() {
    return version;
  }

  public void setVersion(VulnerabilityTypeVersion version) {
    this.version = version;
  }

  public ApiPackageManagerLocation path(String path) {
    this.path = path;
    return this;
  }

   /**
   * The path from which we gathered that this package/version is installed.
   * @return path
  **/
  @ApiModelProperty(value = "The path from which we gathered that this package/version is installed.")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiPackageManagerLocation apiPackageManagerLocation = (ApiPackageManagerLocation) o;
    return Objects.equals(this.cpeUri, apiPackageManagerLocation.cpeUri) &&
        Objects.equals(this.version, apiPackageManagerLocation.version) &&
        Objects.equals(this.path, apiPackageManagerLocation.path);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpeUri, version, path);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiPackageManagerLocation {\n");
    
    sb.append("    cpeUri: ").append(toIndentedString(cpeUri)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

