/**
 * Grafeas API
 * An API to insert and retrieve annotations on cloud artifacts.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.grafeas.client;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.grafeas.client.SourceContext;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * An ExtendedSourceContext is a SourceContext combined with additional details describing the context.
 */
@ApiModel(description = "An ExtendedSourceContext is a SourceContext combined with additional details describing the context.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-08T14:44:14.136-04:00")
public class ExtendedSourceContext   {
  @SerializedName("context")
  private SourceContext context = null;

  @SerializedName("labels")
  private Map<String, String> labels = new HashMap<String, String>();

  public ExtendedSourceContext context(SourceContext context) {
    this.context = context;
    return this;
  }

   /**
   * Any source context.
   * @return context
  **/
  @ApiModelProperty(example = "null", value = "Any source context.")
  public SourceContext getContext() {
    return context;
  }

  public void setContext(SourceContext context) {
    this.context = context;
  }

  public ExtendedSourceContext labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public ExtendedSourceContext putLabelsItem(String key, String labelsItem) {
    this.labels.put(key, labelsItem);
    return this;
  }

   /**
   * Labels with user defined metadata.
   * @return labels
  **/
  @ApiModelProperty(example = "null", value = "Labels with user defined metadata.")
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtendedSourceContext extendedSourceContext = (ExtendedSourceContext) o;
    return Objects.equals(this.context, extendedSourceContext.context) &&
        Objects.equals(this.labels, extendedSourceContext.labels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(context, labels);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtendedSourceContext {\n");
    
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

