/*
 * Grafeas API
 * An API to insert and retrieve annotations on cloud artifacts.
 *
 * OpenAPI spec version: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.grafeas.api;

import io.grafeas.ApiException;
import io.grafeas.model.ApiCreateOperationRequest;
import io.grafeas.model.ApiListNoteOccurrencesResponse;
import io.grafeas.model.ApiListNotesResponse;
import io.grafeas.model.ApiListOccurrencesResponse;
import io.grafeas.model.ApiNote;
import io.grafeas.model.ApiOccurrence;
import io.grafeas.model.LongrunningOperation;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GrafeasApi
 */
@Ignore
public class GrafeasApiTest {

    private final GrafeasApi api = new GrafeasApi();

    
    /**
     * Creates a new &#x60;Note&#x60;.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNoteTest() throws ApiException {
        String parent = null;
        ApiNote body = null;
        ApiNote response = api.createNote(parent, body);

        // TODO: test validations
    }
    
    /**
     * Creates a new &#x60;Occurrence&#x60;. Use this method to create &#x60;Occurrences&#x60; for a resource.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOccurrenceTest() throws ApiException {
        String parent = null;
        ApiOccurrence body = null;
        ApiOccurrence response = api.createOccurrence(parent, body);

        // TODO: test validations
    }
    
    /**
     * Creates a new &#x60;Operation&#x60;.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOperationTest() throws ApiException {
        String parent = null;
        ApiCreateOperationRequest body = null;
        LongrunningOperation response = api.createOperation(parent, body);

        // TODO: test validations
    }
    
    /**
     * Gets the &#x60;Note&#x60; attached to the given &#x60;Occurrence&#x60;.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOccurrenceNoteTest() throws ApiException {
        String name = null;
        ApiNote response = api.getOccurrenceNote(name);

        // TODO: test validations
    }
    
    /**
     * Lists &#x60;Occurrences&#x60; referencing the specified &#x60;Note&#x60;. Use this method to get all occurrences referencing your &#x60;Note&#x60; across all your customer projects.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNoteOccurrencesTest() throws ApiException {
        String name = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        ApiListNoteOccurrencesResponse response = api.listNoteOccurrences(name, filter, pageSize, pageToken);

        // TODO: test validations
    }
    
    /**
     * Lists all &#x60;Notes&#x60; for a given project.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNotesTest() throws ApiException {
        String parent = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        ApiListNotesResponse response = api.listNotes(parent, filter, pageSize, pageToken);

        // TODO: test validations
    }
    
    /**
     * Lists active &#x60;Occurrences&#x60; for a given project matching the filters.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOccurrencesTest() throws ApiException {
        String parent = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        ApiListOccurrencesResponse response = api.listOccurrences(parent, filter, pageSize, pageToken);

        // TODO: test validations
    }
    
    /**
     * Updates an existing &#x60;Note&#x60;.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateNoteTest() throws ApiException {
        String name = null;
        ApiNote body = null;
        ApiNote response = api.updateNote(name, body);

        // TODO: test validations
    }
    
}
