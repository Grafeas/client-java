/*
 * Grafeas API
 * An API to insert and retrieve annotations on cloud artifacts.
 *
 * OpenAPI spec version: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.grafeas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * A GitSourceContext denotes a particular revision in a third party Git repository (e.g., GitHub).
 */
@ApiModel(description = "A GitSourceContext denotes a particular revision in a third party Git repository (e.g., GitHub).")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-04T13:20:14.121-07:00")
public class ApiGitSourceContext {
  @SerializedName("url")
  private String url = null;

  @SerializedName("revision_id")
  private String revisionId = null;

  public ApiGitSourceContext url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Git repository URL.
   * @return url
  **/
  @ApiModelProperty(value = "Git repository URL.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public ApiGitSourceContext revisionId(String revisionId) {
    this.revisionId = revisionId;
    return this;
  }

   /**
   * Required. Git commit hash.
   * @return revisionId
  **/
  @ApiModelProperty(value = "Required. Git commit hash.")
  public String getRevisionId() {
    return revisionId;
  }

  public void setRevisionId(String revisionId) {
    this.revisionId = revisionId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiGitSourceContext apiGitSourceContext = (ApiGitSourceContext) o;
    return Objects.equals(this.url, apiGitSourceContext.url) &&
        Objects.equals(this.revisionId, apiGitSourceContext.revisionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, revisionId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiGitSourceContext {\n");
    
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    revisionId: ").append(toIndentedString(revisionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

